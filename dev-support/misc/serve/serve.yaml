#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: apps/v1
kind: Deployment
metadata:
  name: serve-example # name == ${model-registry}-{version}
spec:
  selector:
    matchLabels:
      app: serve-example-pod # 
  template:
    metadata:
      labels:
        app: serve-example-pod
    spec:
      containers:
      - name: serve-example-container
        image: apache/submarine:serve-0.6.0-SNAPSHOT
        command:
          - "mlflow"
          - "models"
          - "serve"
          - "--model-uri"
          - "models:/simple-nn-model/1"
          - "--host"
          - "0.0.0.0" # make it accessible from the outside
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        readinessProbe: # make container ready until mlflow serving server is ready to receive request
          httpGet:
            path: /ping # from mlflow scoring_server
            port: 5000
---
apiVersion: v1
kind: Service
metadata:
  name: serve-example-service
spec:
  type: ClusterIP
  selector:
    app: serve-example-pod
  ports:
  - protocol: TCP
    port: 5000 # port on service
    targetPort: 5000 # port on container
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: serve-example-ingressroute
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: "PathPrefix(`/serve/mymodel`)"
    middlewares:
    - name: stripprefix
    services:
    - kind: Service
      name: serve-example-service
      port: 5000
---
# strip the prefix
# e.g. Make a HTTP POST: localhost:32080/serve/mymodel/invocations
#      The serve pod (with ingressroute `/serve/mymodel/`) receives path "/serve/mymodel/invocations"
#      We should strip the prefix and make it become "/invocations"
apiVersion: traefik.containo.us/v1alpha1
kind: Middleware
metadata:
  name: stripprefix
spec:
  stripPrefix:
    prefixes:
      - /serve/mymodel