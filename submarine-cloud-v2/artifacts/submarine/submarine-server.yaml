---
# Source: submarine/templates/submarine-server.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "submarine-server"
---
# Source: submarine/templates/submarine-server.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "default"
---
# Source: submarine/templates/submarine-server.yaml
#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

apiVersion: v1
kind: Service
metadata:
  name: "submarine-server"
  labels:
    app: "submarine-server"
spec:
  ports:
  - port: 8080
    targetPort: 8080
    protocol: TCP
    name: http
  selector:
    app: "submarine-server"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: submarine-config
data:
  SUBMARINE_SERVER_PORT: "8080"
  SUBMARINE_SERVER_PORT_8080_TCP: "8080"
  K8S_APISERVER_URL: "kubernetes.default.svc"
  submarine.conf.dir: "conf"
  submarine.localization.max-allowed-file-size-mb: "2048"
  submarine.server.addr: "0.0.0.0"
  submarine.server.port: "8080"
  submarine.server.ssl: "false"
  submarine.server.ssl.port: "8443"
  submarine.server.jetty.thread.pool.max: "400"
  submarine.server.jetty.thread.pool.min: "8"
  submarine.server.jetty.thread.pool.timeout: "30"
  submarine.server.jetty.request.header.size: "8192"
  submarine.server.ssl.client.auth: "false"
  submarine.server.ssl.keystore.path: "keystore"
  submarine.server.ssl.keystore.type: "JKS"
  submarine.server.ssl.keystore.password: ""
  submarine.server.ssl.key.manager.password: ""  # Saved as null in SubmarineConfVars.java
  submarine.server.ssl.truststore.path: ""  # Saved as null in SubmarineConfVars.java
  submarine.server.ssl.truststore.type: ""  # Saved as null in SubmarineConfVars.java
  submarine.server.ssl.truststore.password: ""  # Saved as null in SubmarineConfVars.java
  submarine.cluster.addr: ""
  ubmarine.server.rpc.enabled: "false"
  submarine.server.rpc.port: "8980"
  cluster.heartbeat.interval: "3000"
  cluster.heartbeat.timeout: "9000"
  jdbc.driverClassName: "com.mysql.jdbc.Driver"
  jdbc.url: "jdbc:mysql://127.0.0.1:3306/submarine?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&allowMultiQueries=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false&serverTimezone=UTC&useTimezone=true&useLegacyDatetimeCode=true"
  jdbc.username: "submarine"
  jdbc.password: "password"
  metastore.jdbc.url: "jdbc:mysql://127.0.0.1:3306/metastore?useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false&zeroDateTimeBehavior=convertToNull&useSSL=false"
  metastore.jdbc.username: "metastore"
  metastore.jdbc.password: "password"
  submarine.notebook.default.overwrite_json: ""
  workbench.websocket.max.text.message.size: "1024000"
  workbench.web.war: "../submarine-workbench-web.war"  # latest: "submarine-workbench/workbench-web/dist"
  submarine.runtime.class: "org.apache.submarine.server.submitter.yarn.YarnRuntimeFactory"
  submarine.submitter: "k8s"
  submarine.server.service.name: "submarine-server"
  environment.conda.min.version: "4.0.1"
  environment.conda.max.version: "4.11.10"
---
# Source: submarine/templates/submarine-server.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "submarine-server"
spec:
  selector:
    matchLabels:
      app: "submarine-server"
  replicas: 1
  template:
    metadata:
      labels:
        app: "submarine-server"

    spec:
      serviceAccountName: "submarine-server"
      initContainers:
      - name: submarine-server-initcontainer
        image: "minio/mc"
        command: ["/bin/bash", "-c",
        "cnt=0;
        while ! /bin/bash -c 'mc --config-dir /root/.mc config host add minio http://submarine-minio-service:9000
        submarine_minio submarine_minio' 2>&1;
        do
          sleep 15;
          ((cnt=cnt+1));
          if [ $cnt -eq 80 ];then
            echo 'ERROR: wait too long for minio pod';
            exit 1;
          fi;
        done;
        if /bin/bash -c 'mc --config-dir /root/.mc ls minio/submarine' >/dev/null 2>&1; then
          echo 'Bucket minio/submarine already exists, skipping creation.';
        else
          /bin/bash -c 'mc --config-dir /root/.mc mb minio/submarine';
        fi;"]
        volumeMounts:
          - name: mc-config-vol
            mountPath: /root/.mc
      volumes:
        - name: mc-config-vol
          emptyDir: { }
      containers:
      - name: "submarine-server"

        image: "apache/submarine:server-0.8.0-SNAPSHOT"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
        envFrom:
        - configMapRef:
            name: submarine-config
