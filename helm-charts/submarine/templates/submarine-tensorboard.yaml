#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: v1
kind: PersistentVolume
metadata:
  name: submarine-tensorboard-pv
spec:
  accessModes:
    - ReadWriteMany
  capacity:
    storage: "{{ .Values.submarine.tensorboard.storage }}"
{{- with .Values.submarine.storage }}
  {{- if eq (.type | lower) "nfs" }}
  nfs:
    server: {{ .nfs.ip }}
    path: {{ .nfs.path }}
  {{- else }}
  hostPath:
    path: "{{ .host.path }}"
    type: DirectoryOrCreate
  {{- end }}
{{- end}}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: submarine-tensorboard-pvc
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: ""
  resources:
    requests:
      storage: "{{ .Values.submarine.tensorboard.storage }}"
  volumeName: submarine-tensorboard-pv # bind to specific pv
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: submarine-tensorboard
spec:
  selector:
    matchLabels:
      app: submarine-tensorboard-pod
  template:
    metadata:
      labels:
        app: submarine-tensorboard-pod
    spec:
      containers:
      - name: submarine-tensorboard-container
        image: tensorflow/tensorflow:1.11.0
        command:
          - "tensorboard"
          - "--logdir=/logs"
          - "--path_prefix={{ .Values.submarine.tensorboard.ingressPath }}"
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 6006
        volumeMounts:
          - mountPath: "/logs"
            name: "volume"
            subPath: "submarine-tensorboard"
        readinessProbe:
          tcpSocket:
            port: 6006
          periodSeconds: 10
      volumes:
        - name: "volume"
          persistentVolumeClaim:
            claimName: "submarine-tensorboard-pvc"
---
apiVersion: v1
kind: Service
metadata:
  name: submarine-tensorboard-service
spec:
  selector:
    app: submarine-tensorboard-pod
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 6006
---
apiVersion: traefik.containo.us/v1alpha1
kind: IngressRoute
metadata:
  name: submarine-tensorboard-ingressroute
spec:
  entryPoints:
    - web
  routes:
  - kind: Rule
    match: "PathPrefix(`{{ .Values.submarine.tensorboard.ingressPath }}`)"
    services:
    - kind: Service
      name: submarine-tensorboard-service
      port: 8080
